[project]
name = "ai-hr-backend"
version = "0.1.0"
description = "AI HR system backend (FastAPI)"
readme = "README.md"
requires-python = ">=3.13"
license = { text = "MIT" }
authors = [
  { name = "MoreTech Team" }
]
dependencies = [
  "fastapi>=0.111.0",
  "uvicorn[standard]>=0.30.0",
  "sqlalchemy[asyncio]>=2.0.30",
  "alembic>=1.13.1",
  "pydantic>=2.7.1",
  "pydantic-settings>=2.2.1",
  "asyncpg>=0.29.0",
  "python-dotenv>=1.0.1",
  "httpx>=0.27.0",
  "email-validator>=2.2.0",
  "python-multipart>=0.0.20",
  "gigachat>=0.1.36",
  "yandex-speechkit>=1.5.0",
  "audioop-lts>=0.2.2",
  "pgvector>=0.2.4",
  "numpy>=1.24.0",
  "scikit-learn>=1.3.0",
  "boto3>=1.40.26",
]

[tool.uv]
dev-dependencies = [
  "pytest>=8.2.0",
  "pytest-asyncio>=0.23.6",
  "pytest-cov>=4.1.0",
  "testcontainers[postgres]>=4.7.2",
  "testcontainers[minio]>=4.7.2",
  "ruff>=0.5.0",
  "black>=24.4.2",
]

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
