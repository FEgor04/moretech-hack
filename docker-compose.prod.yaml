services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    env_file: .env
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.le.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --api.dashboard=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      # Redirect HTTP to HTTPS
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  postgres:
    env_file: .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    # Remove port exposure in production
    ports: []

  backend:
    env_file: .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/postgres
      - HOST=${HOST}
    # Remove port exposure in production
    ports: []
    # Remove volume mount in production
    volumes: []

  frontend:
    env_file: .env
    # Remove port exposure in production
    ports: []
    # Remove volume mount in production
    volumes: []
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${HOST}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=le"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

volumes:
  traefik-letsencrypt:
