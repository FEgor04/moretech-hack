// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { HealthHealthGetData, HealthHealthGetResponses, ListUsersUsersGetData, ListUsersUsersGetResponses, CreateUserUsersPostData, CreateUserUsersPostResponses, CreateUserUsersPostErrors, DeleteUserUsersUserIdDeleteData, DeleteUserUsersUserIdDeleteResponses, DeleteUserUsersUserIdDeleteErrors, GetUserUsersUserIdGetData, GetUserUsersUserIdGetResponses, GetUserUsersUserIdGetErrors, ListCandidatesCandidatesGetData, ListCandidatesCandidatesGetResponses, CreateCandidateCandidatesPostData, CreateCandidateCandidatesPostResponses, CreateCandidateCandidatesPostErrors, DeleteCandidateCandidatesCandidateIdDeleteData, DeleteCandidateCandidatesCandidateIdDeleteResponses, DeleteCandidateCandidatesCandidateIdDeleteErrors, GetCandidateCandidatesCandidateIdGetData, GetCandidateCandidatesCandidateIdGetResponses, GetCandidateCandidatesCandidateIdGetErrors, UpdateCandidateCandidatesCandidateIdPatchData, UpdateCandidateCandidatesCandidateIdPatchResponses, UpdateCandidateCandidatesCandidateIdPatchErrors, ListVacanciesVacanciesGetData, ListVacanciesVacanciesGetResponses, CreateVacancyVacanciesPostData, CreateVacancyVacanciesPostResponses, CreateVacancyVacanciesPostErrors, DeleteVacancyVacanciesVacancyIdDeleteData, DeleteVacancyVacanciesVacancyIdDeleteResponses, DeleteVacancyVacanciesVacancyIdDeleteErrors, GetVacancyVacanciesVacancyIdGetData, GetVacancyVacanciesVacancyIdGetResponses, GetVacancyVacanciesVacancyIdGetErrors, UpdateVacancyVacanciesVacancyIdPatchData, UpdateVacancyVacanciesVacancyIdPatchResponses, UpdateVacancyVacanciesVacancyIdPatchErrors, ListInterviewsInterviewsGetData, ListInterviewsInterviewsGetResponses, CreateInterviewInterviewsPostData, CreateInterviewInterviewsPostResponses, CreateInterviewInterviewsPostErrors, DeleteInterviewInterviewsInterviewIdDeleteData, DeleteInterviewInterviewsInterviewIdDeleteResponses, DeleteInterviewInterviewsInterviewIdDeleteErrors, GetInterviewInterviewsInterviewIdGetData, GetInterviewInterviewsInterviewIdGetResponses, GetInterviewInterviewsInterviewIdGetErrors, UpdateInterviewInterviewsInterviewIdPatchData, UpdateInterviewInterviewsInterviewIdPatchResponses, UpdateInterviewInterviewsInterviewIdPatchErrors, SigninAuthSigninPostData, SigninAuthSigninPostResponses, SigninAuthSigninPostErrors, MeAuthMeGetData, MeAuthMeGetResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Health
 */
export const healthHealthGet = <ThrowOnError extends boolean = false>(options?: Options<HealthHealthGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<HealthHealthGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/health',
        ...options
    });
};

/**
 * List Users
 */
export const listUsersUsersGet = <ThrowOnError extends boolean = false>(options?: Options<ListUsersUsersGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListUsersUsersGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/users/',
        ...options
    });
};

/**
 * Create User
 */
export const createUserUsersPost = <ThrowOnError extends boolean = false>(options: Options<CreateUserUsersPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateUserUsersPostResponses, CreateUserUsersPostErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/users/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete User
 */
export const deleteUserUsersUserIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteUserUsersUserIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserUsersUserIdDeleteResponses, DeleteUserUsersUserIdDeleteErrors, ThrowOnError>({
        url: '/users/{user_id}',
        ...options
    });
};

/**
 * Get User
 */
export const getUserUsersUserIdGet = <ThrowOnError extends boolean = false>(options: Options<GetUserUsersUserIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserUsersUserIdGetResponses, GetUserUsersUserIdGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/users/{user_id}',
        ...options
    });
};

/**
 * List Candidates
 */
export const listCandidatesCandidatesGet = <ThrowOnError extends boolean = false>(options?: Options<ListCandidatesCandidatesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListCandidatesCandidatesGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/candidates/',
        ...options
    });
};

/**
 * Create Candidate
 */
export const createCandidateCandidatesPost = <ThrowOnError extends boolean = false>(options: Options<CreateCandidateCandidatesPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateCandidateCandidatesPostResponses, CreateCandidateCandidatesPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/candidates/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Candidate
 */
export const deleteCandidateCandidatesCandidateIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteCandidateCandidatesCandidateIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCandidateCandidatesCandidateIdDeleteResponses, DeleteCandidateCandidatesCandidateIdDeleteErrors, ThrowOnError>({
        url: '/candidates/{candidate_id}',
        ...options
    });
};

/**
 * Get Candidate
 */
export const getCandidateCandidatesCandidateIdGet = <ThrowOnError extends boolean = false>(options: Options<GetCandidateCandidatesCandidateIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCandidateCandidatesCandidateIdGetResponses, GetCandidateCandidatesCandidateIdGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/candidates/{candidate_id}',
        ...options
    });
};

/**
 * Update Candidate
 */
export const updateCandidateCandidatesCandidateIdPatch = <ThrowOnError extends boolean = false>(options: Options<UpdateCandidateCandidatesCandidateIdPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UpdateCandidateCandidatesCandidateIdPatchResponses, UpdateCandidateCandidatesCandidateIdPatchErrors, ThrowOnError>({
        responseType: 'json',
        url: '/candidates/{candidate_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * List Vacancies
 */
export const listVacanciesVacanciesGet = <ThrowOnError extends boolean = false>(options?: Options<ListVacanciesVacanciesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListVacanciesVacanciesGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/vacancies/',
        ...options
    });
};

/**
 * Create Vacancy
 */
export const createVacancyVacanciesPost = <ThrowOnError extends boolean = false>(options: Options<CreateVacancyVacanciesPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateVacancyVacanciesPostResponses, CreateVacancyVacanciesPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/vacancies/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Vacancy
 */
export const deleteVacancyVacanciesVacancyIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteVacancyVacanciesVacancyIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteVacancyVacanciesVacancyIdDeleteResponses, DeleteVacancyVacanciesVacancyIdDeleteErrors, ThrowOnError>({
        url: '/vacancies/{vacancy_id}',
        ...options
    });
};

/**
 * Get Vacancy
 */
export const getVacancyVacanciesVacancyIdGet = <ThrowOnError extends boolean = false>(options: Options<GetVacancyVacanciesVacancyIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetVacancyVacanciesVacancyIdGetResponses, GetVacancyVacanciesVacancyIdGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/vacancies/{vacancy_id}',
        ...options
    });
};

/**
 * Update Vacancy
 */
export const updateVacancyVacanciesVacancyIdPatch = <ThrowOnError extends boolean = false>(options: Options<UpdateVacancyVacanciesVacancyIdPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UpdateVacancyVacanciesVacancyIdPatchResponses, UpdateVacancyVacanciesVacancyIdPatchErrors, ThrowOnError>({
        responseType: 'json',
        url: '/vacancies/{vacancy_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * List Interviews
 */
export const listInterviewsInterviewsGet = <ThrowOnError extends boolean = false>(options?: Options<ListInterviewsInterviewsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListInterviewsInterviewsGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/interviews/',
        ...options
    });
};

/**
 * Create Interview
 */
export const createInterviewInterviewsPost = <ThrowOnError extends boolean = false>(options: Options<CreateInterviewInterviewsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateInterviewInterviewsPostResponses, CreateInterviewInterviewsPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/interviews/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Interview
 */
export const deleteInterviewInterviewsInterviewIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteInterviewInterviewsInterviewIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteInterviewInterviewsInterviewIdDeleteResponses, DeleteInterviewInterviewsInterviewIdDeleteErrors, ThrowOnError>({
        url: '/interviews/{interview_id}',
        ...options
    });
};

/**
 * Get Interview
 */
export const getInterviewInterviewsInterviewIdGet = <ThrowOnError extends boolean = false>(options: Options<GetInterviewInterviewsInterviewIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetInterviewInterviewsInterviewIdGetResponses, GetInterviewInterviewsInterviewIdGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/interviews/{interview_id}',
        ...options
    });
};

/**
 * Update Interview
 */
export const updateInterviewInterviewsInterviewIdPatch = <ThrowOnError extends boolean = false>(options: Options<UpdateInterviewInterviewsInterviewIdPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UpdateInterviewInterviewsInterviewIdPatchResponses, UpdateInterviewInterviewsInterviewIdPatchErrors, ThrowOnError>({
        responseType: 'json',
        url: '/interviews/{interview_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Signin
 */
export const signinAuthSigninPost = <ThrowOnError extends boolean = false>(options: Options<SigninAuthSigninPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SigninAuthSigninPostResponses, SigninAuthSigninPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/signin',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Me
 */
export const meAuthMeGet = <ThrowOnError extends boolean = false>(options?: Options<MeAuthMeGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<MeAuthMeGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/auth/me',
        ...options
    });
};