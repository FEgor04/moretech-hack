services:
  postgres:
    container_name: postgres-dev
    image: postgres:17.6-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - db-data-dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    env_file: docker.env
    container_name: backend-dev
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/postgres
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        until nc -z postgres 5432; do
          echo 'Database is unavailable - sleeping'
          sleep 1
        done &&
        echo 'Database is ready!' &&
        echo 'Running database migrations...' &&
        alembic upgrade head &&
        echo 'Migrations completed successfully!' &&
        echo 'Starting FastAPI server in development mode...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  frontend:
    container_name: frontend-dev
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: >
      sh -c "
        echo 'Starting frontend development server...' &&
        cd /app &&
        npm install -g pnpm &&
        pnpm install &&
        pnpm run dev --host 0.0.0.0 --port 80
      "

volumes:
  db-data-dev:
